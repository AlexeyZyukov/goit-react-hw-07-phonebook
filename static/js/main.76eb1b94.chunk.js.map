{"version":3,"sources":["components/Contacts/contacts.module.css","components/styles.module.css","redux/contacts-actions.js","redux/types.js","redux/contacts-reducer.js","redux/store.js","components/Form/Form.js","redux/contacts-selectors.js","components/Filter/Filter.js","components/Contacts/Contacts.js","App.js","index.js","components/Form/form.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","filterContacts","contactsReducer","createReducer","contactsAction","state","action","filter","contact","filterReducer","_","combineReducers","contacts","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","persistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","devTools","process","persistor","persistStore","connect","dispatch","onSubmit","contactsActions","useState","setName","setNumber","handleChange","evt","currentTarget","value","className","styles","form","preventDefault","formLabel","inputName","formInput","type","pattern","title","onChange","required","getFilter","allContacts","getContacts","toLocaleLowerCase","includes","Filter","useSelector","useDispatch","event","Contacts","onFilter","contactList","map","contactListItem","onClick","onDelete","App","container","wrapper","ReactDOM","render","StrictMode","loading","document","querySelector"],"mappings":"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","file":"static/js/main.76eb1b94.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"contacts_contactList__5dymG\",\"contactListItem\":\"contacts_contactListItem__MZz8z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"styles_wrapper__1Ocm2\"};","import { createAction } from '@reduxjs/toolkit';\nimport { v4 as uuidv4 } from 'uuid';\nimport { ADD, DELETE, FILTER } from './types';\n\nconst addContact = createAction(ADD, ({ name, number }) => ({\n  payload: {\n    id: uuidv4(),\n    name,\n    number,\n  },\n}));\n\nconst deleteContact = createAction(DELETE);\nconst filterContacts = createAction(FILTER);\n\nexport default { addContact, deleteContact, filterContacts };\n","const ADD = 'contacts/add';\nconst DELETE = 'contacts/delete';\nconst FILTER = 'contacts/filter';\n\nconst CONTACT_ID = 'contacts/contactId';\n\nexport { ADD, DELETE, FILTER, CONTACT_ID };\n","// {\n//     contacts: {\n//         items: [],\n//             filter: '',\n//     }\n// }\n\nimport { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport contactsAction from './contacts-actions';\n\nconst contactsReducer = createReducer(\n  [\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n  ],\n  {\n    [contactsAction.addContact]: (state, action) => [...state, action.payload],\n    [contactsAction.deleteContact]: (state, action) =>\n      state.filter(contact => contact.id !== action.payload),\n  },\n);\n\nconst filterReducer = createReducer('', {\n  [contactsAction.filterContacts]: (_, action) => action.payload,\n});\n\nexport default combineReducers({\n  contacts: contactsReducer,\n  filter: filterReducer,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport logger from 'redux-logger';\nimport contactsReducer from './contacts-reducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst persistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\nconst store = configureStore({\n  reducer: { contacts: persistReducer(persistConfig, contactsReducer) },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n","import { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { v4 as uuidv4 } from 'uuid';\nimport contactsActions from '../../redux/contacts-actions';\nimport styles from './form.module.css';\n\nfunction Form({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = evt => {\n    const { name, value } = evt.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    onSubmit({\n      name,\n      number,\n      id: uuidv4(),\n    });\n    reset();\n  }\n\n  // const contactId = uuidv4();\n  return (\n    <form className={styles.form} onSubmit={handleSubmit}>\n      <label className={styles.formLabel}>\n        <p className={styles.inputName}>Name </p>\n        <input\n          className={styles.formInput}\n          // id={contactId}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          value={name}\n          onChange={handleChange}\n          required\n        />\n      </label>\n      <label className=\"formLabel\">\n        <p className={styles.inputName}> Number</p>\n        <input\n          className={styles.formInput}\n          // id={contactId}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки\"\n          value={number}\n          onChange={handleChange}\n          required\n        />\n      </label>\n      <button type=\"submit\" className=\"button\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: (name, number) =>\n    dispatch(contactsActions.addContact(name, number)),\n});\n\nexport default connect(null, mapDispatchToProps)(Form);\n","export const getContacts = state => state.contacts.contacts;\nexport const getFilter = state => state.contacts.filter;\n\nexport const filterContacts = state => {\n  const allContacts = getContacts(state);\n  const filter = getFilter(state);\n  return allContacts.filter(contacts =>\n    contacts.name.toLocaleLowerCase().includes(filter.toLocaleLowerCase()),\n  );\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport contactsActions from '../../redux/contacts-actions';\nimport { getFilter } from '../../redux/contacts-selectors';\n\nexport default function Filter() {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n  return (\n    <div className=\"container\">\n      <p className=\"filterTitle\">Find contacts by name</p>\n      <input\n        className=\"formInput\"\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        onChange={event =>\n          dispatch(contactsActions.filterContacts(event.currentTarget.value))\n        }\n      />\n    </div>\n  );\n}\n","import { useSelector, useDispatch } from 'react-redux';\nimport { filterContacts } from '../../redux/contacts-selectors';\nimport contactsAction from '../../redux/contacts-actions';\nimport styles from './contacts.module.css';\n\nexport default function Contacts() {\n  const onFilter = useSelector(filterContacts);\n  const dispatch = useDispatch();\n  const onDelete = id => dispatch(contactsAction.deleteContact(id));\n\n  return (\n    <ul className={styles.contactList}>\n      {onFilter.map(({ id, name, number }) => {\n        return (\n          <li className={styles.contactListItem} key={id}>\n            <p>{name}</p>\n            <p>{number}</p>\n            <button className=\"button\" onClick={() => onDelete(id)} id={id}>\n              Delete contact\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n","import { useState } from 'react';\n\nimport Form from './components/Form/Form';\nimport Filter from './components/Filter/Filter';\nimport Contacts from './components/Contacts/Contacts';\nimport styles from './components/styles.module.css';\n\nexport default function App() {\n  return (\n    <div className={(styles.container, styles.wrapper)}>\n      <h1 className=\"title\">Phone book</h1>\n      <Form />\n      <h2 className=\"title\">Contacts</h2>\n      <Filter />\n      <Contacts />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport store from './redux/store';\n\nimport './index.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.querySelector('#root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"form_form__lef9W\",\"formInput\":\"form_formInput__aI4_6\"};"],"sourceRoot":""}