{"version":3,"sources":["components/Contacts/contacts.module.css","components/styles.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/store.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","components/Form/Form.js","components/Filter/Filter.js","components/Contacts/Contacts.js","App.js","index.js","components/Form/form.module.css"],"names":["module","exports","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","delContactRequest","delContactSuccess","delContactError","delContacts","filterContacts","items","createReducer","_","payload","state","map","item","name","includes","alert","filter","id","loading","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contacts","contactsReducer","devTools","process","axiosInstance","axios","create","baseURL","fetchContacts","dispatch","get","then","data","console","log","catch","error","addContact","number","post","delContact","contactsId","delete","getContacts","getFilter","getLoading","allContacts","contact","toLocaleLowerCase","Form","useState","setName","setNumber","useDispatch","handleChange","evt","currentTarget","value","className","styles","form","onSubmit","preventDefault","contactsOperations","formLabel","inputName","formInput","type","pattern","title","onChange","required","Filter","useSelector","contactsSelectors","event","contactsActions","connect","useEffect","contactList","contactListItem","onClick","onDelete","App","container","wrapper","ReactDOM","render","StrictMode","document","querySelector"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,YAAc,8BAA8B,gBAAkB,oC,mBCAhFD,EAAOC,QAAU,CAAC,QAAU,0B,kiCCIfC,EAAsBC,YAAa,gCACnCC,EAAsBD,YAAa,gCACnCE,EAAoBF,YAAa,8BAEjCG,EAAoBH,YAAa,8BACjCI,EAAoBJ,YAAa,8BACjCK,EAAkBL,YAAa,4BAE/BM,EAAoBN,YAAa,8BACjCO,EAAoBP,YAAa,8BACjCQ,EAAkBR,YAAa,4BAE/BS,EAAcT,YAAa,mBAC3BU,EAAiBV,YAAa,mBCFrCW,EAAQC,YAAc,IAAD,mBACxBX,GAAsB,SAACY,EAAD,YAAMC,WADJ,cAExBV,GAAoB,SAACW,EAAD,GAAyB,IAAfD,EAAc,EAAdA,QAE7B,OADiBC,EAAMC,KAAI,SAAAC,GAAI,OAAIA,EAAKC,QACxBC,SAASL,EAAQI,OAG/BE,MAAM,GAAD,OAAIN,EAAQI,KAAZ,6BACEH,GAHD,GAAN,mBAAWA,GAAX,CAAkBD,OALG,cAWxBP,GAAoB,SAACQ,EAAD,OAAUD,EAAV,EAAUA,QAAV,OACnBC,EAAMM,QAAO,qBAAGC,KAAgBR,QAZT,IAerBO,EAAST,YAAc,GAAD,eACzBF,GAAiB,SAACG,EAAD,YAAMC,YAGpBS,EAAUX,aAAc,GAAD,mBAC1Bb,GAAsB,kBAAM,KADF,cAE1BE,GAAsB,kBAAM,KAFF,cAG1BC,GAAoB,kBAAM,KAHA,cAK1BC,GAAoB,kBAAM,KALA,cAM1BC,GAAoB,kBAAM,KANA,cAO1BC,GAAkB,kBAAM,KAPE,cAS1BC,GAAoB,kBAAM,KATA,cAU1BC,GAAoB,kBAAM,KAVA,cAW1BC,GAAkB,kBAAM,KAXE,IAcdgB,cAAgB,CAAEb,QAAOU,SAAQE,YCrC1CE,EAAU,sBACXC,YAAqB,CACtBC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,SAHhD,CAMdC,MAWa,GAAEC,MARHC,YAAe,CAC3BC,QAAS,CACPC,SAAUC,GAEZf,aACAgB,UAAUC,K,gBCZNC,E,OAAgBC,EAAMC,OAAO,CACjCC,QAFc,gDAKHC,EAAgB,kBAAM,SAAAC,GACjCA,EAASjD,KAET4C,EACGM,IAAI,aACJC,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACPC,QAAQC,IAAI,OAAQF,GACpBH,EAAS/C,EAAoBkD,EAAKxC,WAEnC2C,OAAM,SAAAC,GAAK,OAAIP,EAAS9C,EAAkBqD,SAElCC,EACX,SAAC,GAAD,IAAGtC,EAAH,EAAGA,KAAMuC,EAAT,EAASA,OAAT,OACA,SAAAT,GACE,IAAMT,EAAW,CAAErB,OAAMuC,UACzBT,EAAS7C,KAETwC,EACGe,KAAK,YAAanB,GAClBW,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcH,EAAS5C,EAAkB+C,OAC9CG,OAAM,SAAAC,GAAK,OAAIP,EAAS3C,EAAgBkD,SAGlCI,EAAa,SAAAC,GAAU,OAAI,SAAAZ,GACtCA,EAAS1C,KAETqC,EACGkB,OADH,oBACuBD,IACpBV,MAAK,kBAAMF,EAASzC,EAAkBqD,OACtCN,OAAM,SAAAC,GAAK,OAAIP,EAASxC,EAAgB+C,SC/ChCO,EAAc,SAAA/C,GAAK,OAAIA,EAAMwB,SAAS5B,OACtCoD,EAAY,SAAAhD,GAAK,OAAIA,EAAMwB,SAASlB,QACpC2C,EAAa,SAAAjD,GAAK,OAAIA,EAAMwB,SAAShB,SAErCb,EAAiB,SAAAK,GAC5B,IAAMkD,EAAcH,EAAY/C,GAC1BM,EAAS0C,EAAUhD,GACzB,OAAOkD,EAAY5C,QAAO,SAAA6C,GAAO,OAC/BA,EAAQhD,KAAKiD,oBAAoBhD,SAASE,EAAO8C,yB,uBCFtC,SAASC,IACtB,MAAwBC,mBAAS,IAAjC,mBAAOnD,EAAP,KAAaoD,EAAb,KACA,EAA4BD,mBAAS,IAArC,mBAAOZ,EAAP,KAAec,EAAf,KAEMvB,EAAWwB,cAIXC,EAAe,SAAAC,GACnB,MAAwBA,EAAIC,cAApBzD,EAAR,EAAQA,KAAM0D,EAAd,EAAcA,MACd,OAAQ1D,GACN,IAAK,OACHoD,EAAQM,GACR,MACF,IAAK,SACHL,EAAUK,GACV,MACF,QACE,SAkBN,OACE,uBAAMC,UAAWC,IAAOC,KAAMC,SAVhC,SAAsBN,GACpBA,EAAIO,iBAvBW,SAAC/D,EAAMuC,GACtBT,EAASkC,EAAmB1B,WAAWtC,EAAMuC,IAuB7CuB,CAAS,CACP9D,OACAuC,WARFa,EAAQ,IACRC,EAAU,KAaV,UACE,wBAAOM,UAAWC,IAAOK,UAAzB,UACE,mBAAGN,UAAWC,IAAOM,UAArB,mBACA,uBACEP,UAAWC,IAAOO,UAClBC,KAAK,OACLpE,KAAK,OACLqE,QAAQ,yHACRC,MAAM,kcACNZ,MAAO1D,EACPuE,SAAUhB,EACViB,UAAQ,OAGZ,wBAAOb,UAAWC,IAAOK,UAAzB,UACE,mBAAGN,UAAWC,IAAOM,UAArB,qBACA,uBACEP,UAAWC,IAAOO,UAClBC,KAAK,MACLpE,KAAK,SACLqE,QAAQ,yFACRC,MAAM,obACNZ,MAAOnB,EACPgC,SAAUhB,EACViB,UAAQ,OAGZ,wBAAQJ,KAAK,SAAST,UAAU,SAAhC,4BCnES,SAASc,IACtB,IAAMf,EAAQgB,YAAYC,EAAkB9B,WACtCf,EAAWwB,cACjB,OACE,sBAAKK,UAAU,YAAf,UACE,mBAAGA,UAAU,cAAb,mCACA,uBACEA,UAAU,YACVS,KAAK,OACLpE,KAAK,SACL0D,MAAOA,EACPa,SAAU,SAAAK,GAAK,OACb9C,EAAS+C,EAAgBrF,eAAeoF,EAAMnB,cAAcC,c,qBCatE,IAGeoB,eAAQ,MAHI,SAAAhD,GAAQ,MAAK,CACtCD,cAAe,kBAAMC,EAASkC,EAAmBnC,qBAEpCiD,EA1Bf,WACE,IAAMzD,EAAWqD,YAAYC,EAAkBnF,gBACzCsC,EAAWwB,cAKjB,OAFAyB,qBAAU,kBAAMjD,EAASkC,EAAmBnC,mBAAkB,CAACC,IAG7D,oBAAI6B,UAAWC,IAAOoB,YAAtB,SACG3D,EAASvB,KAAI,YAA2B,IAAxBM,EAAuB,EAAvBA,GAAIJ,EAAmB,EAAnBA,KAAMuC,EAAa,EAAbA,OACzB,OACE,qBAAIoB,UAAWC,IAAOqB,gBAAtB,UACE,4BAAIjF,IACJ,4BAAIuC,IACJ,wBAAQoB,UAAU,SAASvD,GAAIA,EAAI8E,QAAS,kBAXrC,SAAA9E,GAAE,OAAI0B,EAASkC,EAAmBvB,WAAWrC,IAWF+E,CAAS/E,IAA3D,8BAH0CA,W,oBCXvC,SAASgF,KACtB,OACE,sBAAKzB,WAAYC,KAAOyB,UAAWzB,KAAO0B,SAA1C,UACE,oBAAI3B,UAAU,QAAd,wBACA,cAACT,EAAD,IACA,oBAAIS,UAAU,QAAd,sBACA,cAACc,EAAD,IACA,cAAC,GAAD,O,MCJNc,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUvE,MAAOA,EAAMA,MAAvB,SAEE,cAACkE,GAAD,QAGJM,SAASC,cAAc,W,kBCdzBhH,EAAOC,QAAU,CAAC,KAAO,mBAAmB,UAAY,2B","file":"static/js/main.bf8cde46.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"contacts_contactList__PwNxu\",\"contactListItem\":\"contacts_contactListItem__2pod5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"styles_wrapper__34grp\"};","import { createAction } from '@reduxjs/toolkit';\n\n// const asyncGetContacts = createAction('contacts/get');\n// export default { asyncGetContacts };\n\nexport const fetchContactRequest = createAction('contacts/fetchContactRequest');\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\nexport const fetchContactError = createAction('contacts/fetchContactError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const delContactRequest = createAction('contacts/delContactRequest');\nexport const delContactSuccess = createAction('contacts/delContactSuccess');\nexport const delContactError = createAction('contacts/delContactError');\n\nexport const delContacts = createAction('contacts/DELETE');\nexport const filterContacts = createAction('contacts/FILTER');\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\n\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  delContactRequest,\n  delContactSuccess,\n  delContactError,\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n  filterContacts,\n} from './contacts-actions';\n\nconst items = createReducer([], {\n  [fetchContactSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => {\n    let namesArray = state.map(item => item.name);\n    if (!namesArray.includes(payload.name)) {\n      return [...state, payload];\n    } else {\n      alert(`${payload.name} is already in contacts!`);\n      return state;\n    }\n  },\n  [delContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [filterContacts]: (_, { payload }) => payload,\n});\n\nconst loading = createReducer(false, {\n  [fetchContactRequest]: () => true,\n  [fetchContactSuccess]: () => false,\n  [fetchContactError]: () => false,\n\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n\n  [delContactRequest]: () => true,\n  [delContactSuccess]: () => false,\n  [delContactError]: () => false,\n});\n\nexport default combineReducers({ items, filter, loading });\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport logger from 'redux-logger';\nimport contactsReducer from './contacts/contacts-reducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport default { store };\n","import axios from 'axios';\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  delContactRequest,\n  delContactSuccess,\n  delContactError,\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n} from './contacts-actions';\n\nconst baseURL = 'https://61ed902f634f2f00170cec65.mockapi.io';\nconst axiosInstance = axios.create({\n  baseURL: baseURL,\n});\n\nexport const fetchContacts = () => dispatch => {\n  dispatch(fetchContactRequest());\n\n  axiosInstance\n    .get('/contacts')\n    .then(({ data }) => {\n      console.log('data', data);\n      dispatch(fetchContactSuccess(data.items));\n    })\n    .catch(error => dispatch(fetchContactError(error)));\n};\nexport const addContact =\n  ({ name, number }) =>\n  dispatch => {\n    const contacts = { name, number };\n    dispatch(addContactRequest());\n\n    axiosInstance\n      .post('/contacts', contacts)\n      .then(({ data }) => dispatch(addContactSuccess(data)))\n      .catch(error => dispatch(addContactError(error)));\n  };\n\nexport const delContact = contactsId => dispatch => {\n  dispatch(delContactRequest());\n\n  axiosInstance\n    .delete(`/contacts/${contactsId}`)\n    .then(() => dispatch(delContactSuccess(contactsId)))\n    .catch(error => dispatch(delContactError(error)));\n};\n","export const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\nexport const getLoading = state => state.contacts.loading;\n\nexport const filterContacts = state => {\n  const allContacts = getContacts(state);\n  const filter = getFilter(state);\n  return allContacts.filter(contact =>\n    contact.name.toLocaleLowerCase().includes(filter.toLocaleLowerCase()),\n  );\n};\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { contactsOperations } from '../../redux/contacts';\nimport styles from './form.module.css';\n\nexport default function Form() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const onSubmit = (name, number) =>\n    dispatch(contactsOperations.addContact(name, number));\n\n  const handleChange = evt => {\n    const { name, value } = evt.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    onSubmit({\n      name,\n      number,\n    });\n    reset();\n  }\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit}>\n      <label className={styles.formLabel}>\n        <p className={styles.inputName}>Name </p>\n        <input\n          className={styles.formInput}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          value={name}\n          onChange={handleChange}\n          required\n        />\n      </label>\n      <label className={styles.formLabel}>\n        <p className={styles.inputName}> Number</p>\n        <input\n          className={styles.formInput}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки\"\n          value={number}\n          onChange={handleChange}\n          required\n        />\n      </label>\n      <button type=\"submit\" className=\"button\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n","import { useSelector, useDispatch } from 'react-redux';\nimport { contactsSelectors, contactsActions } from '../../redux/contacts';\n\nexport default function Filter() {\n  const value = useSelector(contactsSelectors.getFilter);\n  const dispatch = useDispatch();\n  return (\n    <div className=\"container\">\n      <p className=\"filterTitle\">Find contacts by name</p>\n      <input\n        className=\"formInput\"\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        onChange={event =>\n          dispatch(contactsActions.filterContacts(event.currentTarget.value))\n        }\n      />\n    </div>\n  );\n}\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch, connect } from 'react-redux';\nimport { contactsOperations, contactsSelectors } from '../../redux/contacts';\nimport styles from './contacts.module.css';\n\nfunction Contacts() {\n  const contacts = useSelector(contactsSelectors.filterContacts);\n  const dispatch = useDispatch();\n  const onDelete = id => dispatch(contactsOperations.delContact(id));\n\n  useEffect(() => dispatch(contactsOperations.fetchContacts()), [dispatch]);\n\n  return (\n    <ul className={styles.contactList}>\n      {contacts.map(({ id, name, number }) => {\n        return (\n          <li className={styles.contactListItem} key={id}>\n            <p>{name}</p>\n            <p>{number}</p>\n            <button className=\"button\" id={id} onClick={() => onDelete(id)}>\n              Delete contact\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\nconst mapDispatchToProps = dispatch => ({\n  fetchContacts: () => dispatch(contactsOperations.fetchContacts()),\n});\nexport default connect(null, mapDispatchToProps)(Contacts);\n","import Form from './components/Form/Form';\nimport Filter from './components/Filter/Filter';\nimport Contacts from './components/Contacts/Contacts';\nimport styles from './components/styles.module.css';\n\nexport default function App() {\n  return (\n    <div className={(styles.container, styles.wrapper)}>\n      <h1 className=\"title\">Phone book</h1>\n      <Form />\n      <h2 className=\"title\">Contacts</h2>\n      <Filter />\n      <Contacts />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      {/* <Provider store={store}> */}\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.querySelector('#root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"form_form__1JGwQ\",\"formInput\":\"form_formInput__2DCWt\"};"],"sourceRoot":""}